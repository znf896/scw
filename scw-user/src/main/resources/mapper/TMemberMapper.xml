<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--suppress ALL -->
<mapper namespace="com.alibaba.scwuser.mapper.TMemberMapper">
    <resultMap id="BaseResultMap" type="com.alibaba.scwuser.entity.TMember">
        <id column="id" jdbcType="INTEGER" property="id"/>
        <result column="loginacct" jdbcType="VARCHAR" property="loginacct"/>
        <result column="userpswd" jdbcType="CHAR" property="userpswd"/>
        <result column="username" jdbcType="VARCHAR" property="username"/>
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="authstatus" jdbcType="CHAR" property="authstatus"/>
        <result column="usertype" jdbcType="CHAR" property="usertype"/>
        <result column="realname" jdbcType="VARCHAR" property="realname"/>
        <result column="cardnum" jdbcType="VARCHAR" property="cardnum"/>
        <result column="accttype" jdbcType="CHAR" property="accttype"/>
    </resultMap>
    <sql id="Example_Where_Clause">
        <where>
            <foreach collection="oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>
    <sql id="Update_By_Example_Where_Clause">
        <where>
            <foreach collection="example.oredCriteria" item="criteria" separator="or">
                <if test="criteria.valid">
                    <trim prefix="(" prefixOverrides="and" suffix=")">
                        <foreach collection="criteria.criteria" item="criterion">
                            <choose>
                                <when test="criterion.noValue">
                                    and ${criterion.condition}
                                </when>
                                <when test="criterion.singleValue">
                                    and ${criterion.condition} #{criterion.value}
                                </when>
                                <when test="criterion.betweenValue">
                                    and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                                </when>
                                <when test="criterion.listValue">
                                    and ${criterion.condition}
                                    <foreach close=")" collection="criterion.value" item="listItem" open="("
                                             separator=",">
                                        #{listItem}
                                    </foreach>
                                </when>
                            </choose>
                        </foreach>
                    </trim>
                </if>
            </foreach>
        </where>
    </sql>

    <sql id="Base_Table">
        t_member
    </sql>

    <sql id="Base_Column_List">
        id, loginacct, userpswd, username, email, authstatus, usertype, realname, cardnum, accttype
    </sql>
    <select id="selectByExample" parameterType="com.alibaba.scwuser.entity.TMemberExample" resultMap="BaseResultMap">
        select
        <if test="distinct">
            distinct
        </if>
        <include refid="Base_Column_List"/>
        from t_member
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
        <if test="orderByClause != null">
            order by ${orderByClause}
        </if>
    </select>
    <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_member
        where id = #{id,jdbcType=INTEGER}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
        delete
        from t_member
        where id = #{id,jdbcType=INTEGER}
    </delete>
    <delete id="deleteByExample" parameterType="com.alibaba.scwuser.entity.TMemberExample">
        delete from t_member
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </delete>
    <insert id="insert" parameterType="com.alibaba.scwuser.entity.TMember">
        insert into t_member (id, loginacct, userpswd,
        username, email, authstatus,
        usertype, realname, cardnum,
        accttype)
        values (#{id,jdbcType=INTEGER}, #{loginacct,jdbcType=VARCHAR}, #{userpswd,jdbcType=CHAR},
        #{username,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, #{authstatus,jdbcType=CHAR},
        #{usertype,jdbcType=CHAR}, #{realname,jdbcType=VARCHAR}, #{cardnum,jdbcType=VARCHAR},
        #{accttype,jdbcType=CHAR})
    </insert>
    <insert id="insertSelective" parameterType="com.alibaba.scwuser.entity.TMember">
        insert into t_member
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="loginacct != null">
                loginacct,
            </if>
            <if test="userpswd != null">
                userpswd,
            </if>
            <if test="username != null">
                username,
            </if>
            <if test="email != null">
                email,
            </if>
            <if test="authstatus != null">
                authstatus,
            </if>
            <if test="usertype != null">
                usertype,
            </if>
            <if test="realname != null">
                realname,
            </if>
            <if test="cardnum != null">
                cardnum,
            </if>
            <if test="accttype != null">
                accttype,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=INTEGER},
            </if>
            <if test="loginacct != null">
                #{loginacct,jdbcType=VARCHAR},
            </if>
            <if test="userpswd != null">
                #{userpswd,jdbcType=CHAR},
            </if>
            <if test="username != null">
                #{username,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                #{email,jdbcType=VARCHAR},
            </if>
            <if test="authstatus != null">
                #{authstatus,jdbcType=CHAR},
            </if>
            <if test="usertype != null">
                #{usertype,jdbcType=CHAR},
            </if>
            <if test="realname != null">
                #{realname,jdbcType=VARCHAR},
            </if>
            <if test="cardnum != null">
                #{cardnum,jdbcType=VARCHAR},
            </if>
            <if test="accttype != null">
                #{accttype,jdbcType=CHAR},
            </if>
        </trim>
    </insert>
    <select id="countByExample" parameterType="com.alibaba.scwuser.entity.TMemberExample" resultType="java.lang.Long">
        select count(*) from t_member
        <if test="_parameter != null">
            <include refid="Example_Where_Clause"/>
        </if>
    </select>
    <update id="updateByExampleSelective" parameterType="map">
        update t_member
        <set>
            <if test="row.id != null">
                id = #{row.id,jdbcType=INTEGER},
            </if>
            <if test="row.loginacct != null">
                loginacct = #{row.loginacct,jdbcType=VARCHAR},
            </if>
            <if test="row.userpswd != null">
                userpswd = #{row.userpswd,jdbcType=CHAR},
            </if>
            <if test="row.username != null">
                username = #{row.username,jdbcType=VARCHAR},
            </if>
            <if test="row.email != null">
                email = #{row.email,jdbcType=VARCHAR},
            </if>
            <if test="row.authstatus != null">
                authstatus = #{row.authstatus,jdbcType=CHAR},
            </if>
            <if test="row.usertype != null">
                usertype = #{row.usertype,jdbcType=CHAR},
            </if>
            <if test="row.realname != null">
                realname = #{row.realname,jdbcType=VARCHAR},
            </if>
            <if test="row.cardnum != null">
                cardnum = #{row.cardnum,jdbcType=VARCHAR},
            </if>
            <if test="row.accttype != null">
                accttype = #{row.accttype,jdbcType=CHAR},
            </if>
        </set>
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByExample" parameterType="map">
        update t_member
        set id = #{row.id,jdbcType=INTEGER},
        loginacct = #{row.loginacct,jdbcType=VARCHAR},
        userpswd = #{row.userpswd,jdbcType=CHAR},
        username = #{row.username,jdbcType=VARCHAR},
        email = #{row.email,jdbcType=VARCHAR},
        authstatus = #{row.authstatus,jdbcType=CHAR},
        usertype = #{row.usertype,jdbcType=CHAR},
        realname = #{row.realname,jdbcType=VARCHAR},
        cardnum = #{row.cardnum,jdbcType=VARCHAR},
        accttype = #{row.accttype,jdbcType=CHAR}
        <if test="example != null">
            <include refid="Update_By_Example_Where_Clause"/>
        </if>
    </update>
    <update id="updateByPrimaryKeySelective" parameterType="com.alibaba.scwuser.entity.TMember">
        update t_member
        <set>
            <if test="loginacct != null">
                loginacct = #{loginacct,jdbcType=VARCHAR},
            </if>
            <if test="userpswd != null">
                userpswd = #{userpswd,jdbcType=CHAR},
            </if>
            <if test="username != null">
                username = #{username,jdbcType=VARCHAR},
            </if>
            <if test="email != null">
                email = #{email,jdbcType=VARCHAR},
            </if>
            <if test="authstatus != null">
                authstatus = #{authstatus,jdbcType=CHAR},
            </if>
            <if test="usertype != null">
                usertype = #{usertype,jdbcType=CHAR},
            </if>
            <if test="realname != null">
                realname = #{realname,jdbcType=VARCHAR},
            </if>
            <if test="cardnum != null">
                cardnum = #{cardnum,jdbcType=VARCHAR},
            </if>
            <if test="accttype != null">
                accttype = #{accttype,jdbcType=CHAR},
            </if>
        </set>
        where id = #{id,jdbcType=INTEGER}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.alibaba.scwuser.entity.TMember">
        update t_member
        set loginacct = #{loginacct,jdbcType=VARCHAR},
        userpswd = #{userpswd,jdbcType=CHAR},
        username = #{username,jdbcType=VARCHAR},
        email = #{email,jdbcType=VARCHAR},
        authstatus = #{authstatus,jdbcType=CHAR},
        usertype = #{usertype,jdbcType=CHAR},
        realname = #{realname,jdbcType=VARCHAR},
        cardnum = #{cardnum,jdbcType=VARCHAR},
        accttype = #{accttype,jdbcType=CHAR}
        where id = #{id,jdbcType=INTEGER}
    </update>

    <!--  String findByEmail(String email);-->
    <select id="findByEmail" resultType="java.lang.String">
        select loginacct
        from
        <include refid="Base_Table"/>
        where email = #{email}
    </select>


</mapper>